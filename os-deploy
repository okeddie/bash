#!/bin/bash
# This spawns a 2GB Fedora 22 instance attached to public and private networks using SSH key file.
# Usage: ./os-deploy [INSTANCE_NAME]

# Set the vars
VM_NAME=$1
IMAGE=650fa65d-df4e-48c7-9295-e5bf406a1408
FLAVOR=7e5b213a-d6f5-4c8f-97ff-7abbf7669257
PUBLIC_INTERFACE=7f9a50cd-16c4-4798-89d3-8e031c29f69f
PRIVATE_INTERFACE=7f74efd4-0198-498f-98b1-79ac9eb534c0
KEYNAME=home-auth
# No repo enabled:
#RHEL_IMAGE=388c42d3-f5c8-40a5-abcf-9a27ef3a5f9a
# RHEL install disk repo enabled:
RHEL_IMAGE=827c2f6a-d429-4daa-a42c-b4377562c626
CENT_IMAGE=fa49f768-f5a4-4f84-9aa6-3c30ba2eb4eb
DATE=$(date +%F)
LOG=$HOME/${1}_build.os-deploy.$DATE

# Ensures only 1 argument is assessed.
if [ "$#" -ne "1" ]; then
	echo "Invalid argument. Script requires only instance name."
	exit 1
fi

case $1 in
	--help|help|-h)
		echo "Usgae: $0 VM_NAME"
		echo "For RHEL, use name like: rhel*|rhce*|web*|nfs*|network*|storage*|ssh*|iscsi*|samba*|smtp*|dns* "
		echo "For CENTOS, use name like: cent* "
		echo "For Fedora, use any other naming convention. Fedora is the default base image to use."
		exit 0
		;;
esac

# Use Fedora 22 as the default instance image.
case $VM_NAME in
	rhel*|rhce*|nfs*|network*|web*|storage*|ssh*|iscsi*|samba*|smtp*|dns*)
		echo "Red Hat Enterprise Linux build accepted..."
		OS=rhel
		supernova os boot --image $RHEL_IMAGE --flavor $FLAVOR --nic net-id=$PUBLIC_INTERFACE --nic net-id=$PRIVATE_INTERFACE --key $KEYNAME $VM_NAME > $LOG
		;;
	cent*)
		echo "CentOS build accepted..."
		OS=centos
		supernova os boot --image $CENT_IMAGE --flavor $FLAVOR --nic net-id=$PUBLIC_INTERFACE --nic net-id=$PRIVATE_INTERFACE --key $KEYNAME $VM_NAME > $LOG
		;;
	*)
		echo "Default Fedora 22 build accepted..."
		OS=fedora
		supernova os boot --image $IMAGE --flavor $FLAVOR --nic net-id=$PUBLIC_INTERFACE --nic net-id=$PRIVATE_INTERFACE --key $KEYNAME $VM_NAME > $LOG
		;;
esac

sleep 3
echo "Collect instance facts..."
# Sift out IP facts
INSTANCE_UUID=$(awk '/\| id/{print $4}' $LOG)
while [ -z "$INSTANCE_PUB_IP" ]; 
do echo "Configuring public networking..."; sleep 3; 
INSTANCE_PUB_IP=$(supernova os show $INSTANCE_UUID |awk '/public network/{print $5}')
done 


# Set username for login
case $OS in
	rhel)
		OS_LOGIN=cloud-user
		;;
	centos)
		OS_LOGIN=centos
		;;
	*)
		OS_LOGIN=fedora
		;;
esac

# Progress and info section.
echo "---- instance is booting ----"
sleep 5
echo -ne '####                     (15%)\r'
sleep 5
echo -ne '#########                (30%)\r'
sleep 5
echo -ne '############             (40%)\r'
sleep 5
echo -ne '##############           (50%)\r'
sleep 5
echo -ne '##################       (60%)\r'
sleep 10
echo -ne '#####################    (85%)\r'
sleep 10
echo -ne '########################(100%)\r'

echo -ne '\n'
echo "Cleaning up log $LOG"
rm -f $LOG

# Add network private network interface.
case $VM_NAME in
	network*)
		echo "Build complete, adding additional network interface in background. "
		supernova os interface-attach $INSTANCE_UUID --net-id $PRIVATE_INTERFACE >> /dev/null 2>&1
		;;
	*)
		echo "Build complete."
		;;
esac

# Auto login
# Times are longer for cent and fedora as they seem to lag.
case $OS in
        rhel*)
                echo "Logging into $INSTANCE_PUB_IP"
		ssh $OS_LOGIN@$INSTANCE_PUB_IP
                ;;
        centos*)
                echo "Logging into $INSTANCE_PUB_IP"
		sleep 5
		ssh $OS_LOGIN@$INSTANCE_PUB_IP
                ;;
        *)
                echo "Logging into $INSTANCE_PUB_IP"
		sleep 5
		ssh $OS_LOGIN@$INSTANCE_PUB_IP
                ;;
esac

# Handling script exit status.
case $? in 
	0)
	exit 0
	;;
	*)
	echo "Disconnected $OS_LOGIN@$INSTANCE_PUB_IP"
	exit 1
	;;
esac
